version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  slack: circleci/slack@4.4.4
  go: circleci/go@1.7.0
  cypress: cypress-io/cypress@1.29.0

executors:
  machine_no_dlc:
    machine:
      image: ubuntu-2004:202107-02
  machine_with_dlc:
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
  go_docker:
    docker:
      - image: cimg/go:1.17.1
        auth: 
          username: $DOCKER_USERNAME
          password: $DOCKER_PASS

commands:
  build_container:
    description: Start container and verify
    steps:
      - run:
          name: Build container
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USERNAME --password-stdin
            docker-compose build
  start_app:
    description: Start app
    steps:
      - run:
          name: Start app
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USERNAME --password-stdin
            docker-compose up -d


jobs:
  build:
    executor: machine_with_dlc
    steps:
      - checkout
      - restore_cache:
          keys:
              - go-mod-v4-{{ checksum "go.sum" }}
      - build_container
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "./"

  lint:
    executor: go_docker
    steps:
      - checkout
      - run:
          name: Lint the Go cmd/web
          command: gofmt -d ./cmd/web
      - run:
          name: Lint the Go pkg/
          command: gofmt -d ./pkg
  unit-tests:
    executor: machine_with_dlc
    steps:
      - checkout
      - restore_cache:
          keys:
              - go-mod-v1-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
              - go-mod-v1-{{ checksum "go.mod" }}-
              - go-mod-v1-
      - run: mkdir -p /tmp/code_coverage/
      - run: mkdir -p /tmp/test-results/
      - start_app
      - run: 
          name: Verify database up
          command: |
              until docker inspect -f {{.State.Running}} database
              do sleep 10
              echo waiting for the database...
              done
      - run:
          name: Run Go unit tests with coverage
          command: |
                    PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
                    go test --json ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES -v ./... -coverprofile=/tmp/code_coverage/profile.out ./...
      - store_artifacts:
          path: /tmp/code_coverage/profile.out
  go-static-analyzer:
    executor: go_docker
    steps:
      - checkout
      - run:
          name: Run static analyzer on cmd/web
          command: go vet ./cmd/web
      - run:
          name: Run static analyzer on pgk
          command: |
                    go vet ./pkg/forms
                    go vet ./pkg/models
                    go vet ./pkg/models/mock
                    go vet ./pkg/models/mysql
  deploy:
    executor: machine_no_dlc
    steps:
      # - push-image:
      #   - setup-remote-docker
      #   - repo: #todo create context
      - run: echo I'm going to deploy I promise

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - lint
      # - code-coverage
      - go-static-analyzer
      - build
      - unit-tests:
          requires:
            - build
            - lint
            - go-static-analyzer
      - cypress/run:
          executor: machine_with_dlc
          store_artifacts: true
          start: docker-compose up -d
          wait-on: https://localhost:4000
          requires:
            - build
            - lint
            - go-static-analyzer
      - deploy:
          requires:
            - unit-tests
            - cypress/run
          filters:
            branches:
              only:
                - main